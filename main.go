package main

import (
	"net/http"
	"time"

	docs "uacademy/article/docs" // docs is generated by Swag CLI, you have to import it.
	"uacademy/article/handlers"
	"uacademy/article/models"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @contact.name  API Article
// @contact.url   https://john.doe.com
// @contact.email john.doe@swagger.io
// @license.name  Apache 2.0
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html
func main() {
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "2.0"

	handlers.InMemoryArticleData = append(handlers.InMemoryArticleData, models.Article{
		ID: "b6c46a35-d78b-4f1d-80fe-8d617f83ec6c",
		Content: models.Content{
			Title: "Lorem",
			Body:  "Impsume smth smth smthsmth",
		},
		Author: models.Person{
			Firstname: "John",
			Lastname:  "Doe",
		},
		CreatedAt: time.Now(),
	})

	r := gin.Default()

	r.GET("/ping", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"message": "pong",
		})
	})

	v1 := r.Group("/v2")
	{
		v1.POST("/article", handlers.CreateArticle)
		v1.GET("/article/:id", handlers.GetArticleByID)
		v1.GET("/article", handlers.GetArticleList)
		v1.PUT("/article", handlers.UpdateArticle)
		v1.DELETE("/article/:id", handlers.DeleteArticle)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(":3000") // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}
